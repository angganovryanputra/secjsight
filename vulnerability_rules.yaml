rules:

  # XSS - innerHTML dan document.write
  - type: "XSS_innerHTML"
    pattern: "(innerHTML\\s*=|outerHTML\\s*=|document\\.write\\s*\\()"
    description: "Potential XSS vulnerability via innerHTML or document.write"
    payloads:
      - "<script>alert(1)</script>"
      - "<img src=x onerror=alert(1)>"
      - "'><svg/onload=alert(1)>"

  # XSS - eval dan Function constructor
  - type: "XSS_eval"
    pattern: "(eval\\s*\\(|new\\s+Function\\s*\\()"
    description: "Potential XSS vulnerability via eval or Function constructor"
    payloads:
      - "<script>alert(1)</script>"
      - "`; alert(1); //"
      - "javascript:alert(1)"

  # XSS - location dan referrer
  - type: "XSS_location"
    pattern: "(document\\.location|window\\.location|document\\.URL|document\\.referrer)"
    description: "Potential XSS vulnerability via URL manipulation"
    payloads:
      - "<script>alert(1)</script>"
      - "<img src=x onerror=alert(1)>"
      - "'><svg/onload=alert(1)>"

  # XSS - setAttribute
  - type: "XSS_setAttribute"
    pattern: "(setAttribute\\s*\\(\\s*['\"](on\\w+|src|href)['\"])"
    description: "Potential XSS via setAttribute with untrusted input"
    payloads:
      - "<script>alert(1)</script>"
      - "' onclick=alert(1) '"
      - "'><svg/onload=alert(1)>"

  # XSS - jQuery HTML atau append
  - type: "XSS_jQuery"
    pattern: "(\\$\\(.*\\)\\.html\\s*\\(|\\$\\(.*\\)\\.append\\s*\\()"
    description: "Potential XSS vulnerability in jQuery HTML or append functions"
    payloads:
      - "<script>alert(1)</script>"
      - "`; alert(1); //"
      - "<img src=x onerror=alert(1)>"

  # 1. Penggunaan eval()
  - type: "eval"
    pattern: "eval\\("
    description: "Penggunaan eval() dapat menyebabkan serangan XSS (Cross-site Scripting) dan eksekusi kode."
    reference: "https://cwe.mitre.org/data/definitions/95.html"
    payloads: []

  # 2. Penggunaan document.write()
  - type: "document_write"
    pattern: "document\\.write\\("
    description: "Penggunaan document.write() tidak aman jika memasukkan data dinamis dan dapat membuka peluang XSS."
    reference: "https://cwe.mitre.org/data/definitions/79.html"
    payloads: []

  # 3. Penggunaan innerHTML
  - type: "innerHTML"
    pattern: "\\.innerHTML"
    description: "Penggunaan innerHTML dengan data tidak tervalidasi dapat menyebabkan serangan XSS."
    reference: "https://cwe.mitre.org/data/definitions/79.html"
    payloads: []
    
  # 4. Penggunaan setTimeout() dengan kode string
  - type: "setTimeout_eval"
    pattern: "setTimeout\\("
    description: "Menggunakan setTimeout dengan string sebagai argumen pertama rentan terhadap eksekusi kode."
    reference: "https://cwe.mitre.org/data/definitions/95.html"
    payloads: []

  # 5. Penggunaan setInterval() dengan kode string
  - type: "setInterval_eval"
    pattern: "setInterval\\("
    description: "Menggunakan setInterval dengan string sebagai argumen pertama rentan terhadap eksekusi kode."
    reference: "https://cwe.mitre.org/data/definitions/95.html"
    payloads: []

  # 6. Fungsi Function() untuk membuat fungsi dari string
  - type: "function_constructor"
    pattern: "new Function\\("
    description: "Penggunaan Function constructor dengan string rentan terhadap injeksi kode."
    reference: "https://cwe.mitre.org/data/definitions/95.html"
    payloads: []

  # 7. XMLHttpRequest tanpa validasi sumber
  - type: "xmlhttprequest"
    pattern: "new XMLHttpRequest\\(\\)"
    description: "Menggunakan XMLHttpRequest tanpa validasi sumber atau CORS dapat mengakibatkan kebocoran data."
    reference: "https://cwe.mitre.org/data/definitions/200.html"
    payloads: []

  # 8. Menggunakan location.href untuk redirect
  - type: "location_href"
    pattern: "location\\.href"
    description: "Penggunaan location.href tanpa validasi dapat dieksploitasi untuk open redirect."
    reference: "https://cwe.mitre.org/data/definitions/601.html"
    payloads: []
    
  # 9. window.open dengan sumber tak dikenal
  - type: "window_open"
    pattern: "window\\.open\\("
    description: "Penggunaan window.open tanpa validasi dapat memungkinkan tabnabbing dan phishing."
    reference: "https://cwe.mitre.org/data/definitions/200.html"
    payloads: []
    
  # 10. localStorage manipulasi data
  - type: "localstorage_access"
    pattern: "localStorage"
    description: "Penggunaan localStorage tanpa enkripsi atau validasi dapat mengakibatkan kebocoran data."
    reference: "https://cwe.mitre.org/data/definitions/922.html"
    payloads: []
    
  # 11. sessionStorage manipulasi data
  - type: "sessionstorage_access"
    pattern: "sessionStorage"
    description: "Penggunaan sessionStorage tanpa validasi dapat menyebabkan penyimpanan data sensitif yang rentan."
    reference: "https://cwe.mitre.org/data/definitions/922.html"
    payloads: []
    
  # 12. Cookie tidak aman
  - type: "document_cookie"
    pattern: "document\\.cookie"
    description: "Mengakses document.cookie dapat membuka peluang serangan XSS dan kebocoran data."
    reference: "https://cwe.mitre.org/data/definitions/79.html"
    payloads: []
    
  # 13. Pemanggilan JSON.parse tanpa sanitasi
  - type: "json_parse"
    pattern: "JSON\\.parse\\("
    description: "Penggunaan JSON.parse tanpa sanitasi data dapat memungkinkan injeksi kode."
    reference: "https://cwe.mitre.org/data/definitions/74.html"
    payloads: []
    
  # 14. openDatabase untuk WebSQL
  - type: "open_database"
    pattern: "openDatabase\\("
    description: "Penggunaan openDatabase pada WebSQL rentan terhadap SQL injection jika input tidak aman."
    reference: "https://cwe.mitre.org/data/definitions/89.html"
    payloads: []
    
  # 15. Penggunaan WebSocket tanpa autentikasi
  - type: "websocket"
    pattern: "new WebSocket\\("
    description: "WebSocket tanpa autentikasi rentan terhadap serangan Man-in-the-Middle dan kebocoran data."
    reference: "https://cwe.mitre.org/data/definitions/319.html"
    payloads: []
    
  # 16. Penggunaan postMessage tanpa validasi sumber
  - type: "postmessage"
    pattern: "postMessage\\("
    description: "Penggunaan postMessage tanpa validasi asal sumber dapat menyebabkan data leak atau manipulasi konten."
    reference: "https://cwe.mitre.org/data/definitions/927.html"
    payloads: []
    
  # 17. Penggunaan atob() untuk decode base64 yang berisiko
  - type: "atob_base64"
    pattern: "atob\\("
    description: "Penggunaan atob untuk decode data Base64 rentan terhadap injeksi jika input tidak tervalidasi."
    reference: "https://cwe.mitre.org/data/definitions/74.html"
    payloads: []
    
  # 18. Penggunaan btoa() untuk encode base64 yang berisiko
  - type: "btoa_base64"
    pattern: "btoa\\("
    description: "Penggunaan btoa untuk encode data Base64 rentan jika input tidak tervalidasi."
    reference: "https://cwe.mitre.org/data/definitions/74.html"
    payloads: []
    
  # 19. fetch API tanpa validasi sumber atau CORS
  - type: "fetch"
    pattern: "fetch\\("
    description: "Penggunaan fetch tanpa validasi sumber atau kontrol CORS dapat mengakibatkan kebocoran data."
    reference: "https://cwe.mitre.org/data/definitions/200.html"
    payloads: []
    
  # 20. Penggunaan Array.prototype.join untuk debug log sensitive
  - type: "array_join"
    pattern: "\\.join\\("
    description: "Penggunaan .join dengan data sensitif dapat menghasilkan output debug log yang rentan bocor."
    reference: "https://cwe.mitre.org/data/definitions/117.html"
    payloads: []
    
  # 21. Deteksi parameter sebagai entry point potensial
  - type: "parameter_entry_point"
    pattern: "\\?"
    description: "Parameter dalam URL dapat menjadi entry point yang perlu divalidasi secara manual."
    reference: "https://cwe.mitre.org/data/definitions/20.html"  # CWE-20: Improper Input Validation
    payloads: []
    